@import=resources/GenericBinarySearch.en_US
theName=Iterative Binary Search (String; EN)
codeExample=public int iterativeBinarySearch(String[] array, String value) {\n  if (array == null || array.length == 0 || value == null) {\n    return -1;\n  }\n  int nrElems = array.length();\n  int l = 0;\n  int r = nrElems - 1;\n  int mid = (l + r) / 2;\n  while (r > l && !(array[mid].equals(value))) {\n    if (value.compareTo(array[mid]) < 0) {\n      r = mid - 1;\n    } else {\n      l = mid + 1;\n    }\n    mid = (l + r) / 2;\n  }\n  if (array[mid].equals(value)) {\n    return mid;\n  } else {\n    return -1;\n  }\n}
animTitle=Iterative Binary Search (String)
algoTitle=Binary Search
animDesc=Description of the algorithm
adForURL=Further animations can be found at http://www.algoanim.info/Animal2 in the online repository.
nrSteps=The algorithm used a total of {0} assignments and {1} comparisons.
description.filename=resources/JavaIterativeBinaryStringSearching_descr_en.txt
description.level=2
description.labelSymbol=#
code.filename=resources/JavaIterativeBinaryStringSearching_code.txt
code.level=2
code.labelSymbol=#
complexity.filename=resources/JavaIterativeBinaryStringSearching_complexity_en.txt
complexity.level=2
complexity.labelSymbol=#
nrAss=Assignments
nrComp=Comparisons
result=Result: {0}