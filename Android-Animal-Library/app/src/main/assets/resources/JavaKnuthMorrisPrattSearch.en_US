algorithmName=KMP String Matching Algorithm
generatorName=Knuth-Morris-Pratt string search
noTextInput=No text was entered.
noPatternInput=No pattern was entered.
label_Text=Text:
label_Pattern=Pattern:
comparisonCounter=Compared character pairs: {0}
compareNaive=The naive searching algorithm would have done {0} comparisons.
abortSearch=It is impossible to find matches. Aborting search.
patternNotFound=The pattern does not occur in the text.
checkInput=Check if the search can make sense.
saveTextLength=The length of the text is saved.
saveText=The text is saved as char[].
savePatternLength=The length of the pattern is saved.
savePattern=The pattern is saved as char[].
hits=The pattern was found {0} time(s).
initOccurrences=A list is created to save the occurrences of the pattern in the text.
foundPattern=The pattern was found. The location is saved and the search continues.
descriptionLine1=The algorithm of Knuth, Morris and Pratt is a string matching algorithm. 
descriptionLine2=The text window is searched for the pattern from the left to the right. 
descriptionLine3=In case of a mismatch, the algorithm tests if a suffix of the compared characters is also a prefix of the pattern. 
descriptionLine4=In that case, those characters do not need to be compared again after moving the text window. 
explainTable=A table is created to save the longest border of each prefix of the pattern.
skipMap=Skip map:
explainBorder=A Border of a string is a substring if it is both a prefix and a suffix of that string.
explainIJ=i is used to determine the length of the prefix, j is used to determine the length of the longest border of the prefix.
emptyStringBorder=The empty string has no border, the value -1 is saved for that.
analyzePattern=The pattern is analyzed from the left to the right.
extendBorder=The border of the previous prefix can be extended.
noBorderOfThisLength=The prefix with a length of {0} has no border with a length of {1}.
testShorterBorder=The next step is to test if the prefix has a shorter border.
noBorder=Only the empty string is a border of the prefix.
longestBorder=The length of the longest border of the prefix with {0} characters is {1}. This value is saved in the table.
explainIJ2=i points at the character in the text, j points at the character in the pattern to compare with the text.
analyzeText=The text is searched for the pattern from the left to the right.
mismatch=The characters of the text window and the pattern do not match.
match1=The first character of the text window and the pattern match.
matchAll=All characters of the text window and the pattern match.
matchVariable=The first {0} characters of the text window and the pattern match.
isNoBorder= is not a border of the pattern.
noBorderFound=No border of the pattern could be found.
nextPossibleBorder=The next step is to test if the characters beginning at position i - {0} are a border of the pattern.
isABorder= is a border of the pattern.
avoidRedundancy=The longest border of the pattern has a length of {0}, the first {0} characters do not need to be compared again.
endSearch=The search is finished.
continue=The next character is compared.