algoDesc=AODV ist ein reaktiver Routing-Algorithmus für mobile Ad-hoc Netze.
aodvAnimation=Die Animation zeigt im linken Bereich den aktuellen Graphen an und stellt den Aufbau einer Route von einem Start- zu einem Zielknoten dar. Dabei wird das Flooding der initialen RREQ-Nachricht dargestellt, sowie die Routingtabelle jedes einzelnen Knotens visualisiert. Der Nachrichtenverlauf wird schrittweise visualisiert und die neu eingetragenen Informationen in der jeweiligen Routingtabelle farblich markiert. Initial kennen die Knoten nur ihren direkten Nachbarn.
aodvFunc=Benötigt ein Knoten eine Route zu einem anderen Knoten, prüft er zuerst ob bereits eine Route zu diesem Knoten in seiner eigenen Routingtabelle existiert. Ist dies nicht der Fall, beginnt AODV reaktiv eine Route-Request Nachricht (RREQ) mittels Flooding durch das Netzwerk zu senden. Ist ein Knoten auf dem Pfad des RREQ der gewünschte Zielknoten oder besitzt er eine aktuelle Route zum Zielknoten, antwortet er mit einer Route-Reply (RREP) Nachricht. Die Knoten selbst halten in ihren Routingtabellen stets die Information über aktuelle Routen zu einem Zielknoten, der benötigte nächste Knoten zu diesem Zielknoten (next hop) und eine Sequenze Nummer (sequence number), sowie die Anzahl der benötigten Weiterleitungen bis zum Zielknoten (number of hops) vor. Die Sequenze Nummer dient dazu aktuellere Routen zu erkennen und das Zirkulieren von Nachrichten beim Flooding zu verhindern.
algoName=Ad-hoc On-demand Distance Vector Routing
algoComplexTitle=Komplexität von AODV
algoComplexity=Das Ziel von AODV ist es die Anzahl der zu sendenden Nachrichten innerhalb des Ad-hoc Netzwerkes so gering wie möglich zu halten. Routen werden deshalb erst bei Bedarf angefragt. Die Sequenze Nummern tragen dazu bei möglichst Effizienz die Routen zu verwalten, sowie Loops im Flooding Prozess zu verhindern. Neue Knoten können sehr effizient dem Netzwerk hinzugefügt werden, da neben Start und Zielknoten auch die restlichen Knoten alle Routeninformationen speichern und so auf Routenanfragen zu einem bestimmten Ziel direkt mit einer lokal verfügbaren Route antworten können.
animDesc=Ad-hoc On-demand Distance Vector Routing (AODV) ist ein reaktiver, topologiebasierter Routing-Algorithmus für mobile Ad-hoc Netze. Die Routen werden von AODV erst bei Bedarf bestimmt und anschließend in einer knoteneigenen Routingtabelle gespeichert.


errorMessageTitle=Fehler beim Validieren der Properties
errorMessageWrongNumberNodes=Start- und Endknoten sind nicht korrekt gesetzt
errorMessageStartNodeNotFound=Angegebener Startknoten ist nicht Teil des Graphen
errorMessageDestinationNodeNotFound=Angegebener Zielknoten ist nicht Teil des Graphen
forwardRREP=Knoten {0} leitet das RREP per Unicast Richtung Zielknoten weiter.
forwardRREQ=Knoten {0}  prüft, ob die Seq# des Start- und Zielknoten im RREQ höher sind als die in seiner Routing Table. Wenn ja, aktualisiert er sie. Anschließend leitet er das RREQ als Broadcast an seine Nachbarn weiter.

infoBox=Erläuterung

node=Knoten

receiveRREP=Der Startknoten erhält das RREP, und kennt nun die Route zum Ziel. Bevor er Daten sendet, wird er das RREP noch mit einem ACK bestätigen, die Route ist jetzt aber gefunden.
routeExists=Der Startknoten {0} hat schon eine Route zu Knoten {1}, und muss keine Route Discovery ausführen. Stattdessen sendet er direkt Daten über die bekannte Route.

sendRREP=Der Zielknoten erhält das RREQ, und antwortet darauf mit einem Route Reply (RREP). In dieses schreibt auch er seine um 1 erhöhte Seq#, bevor er es per Unicast an den Startknoten sendet.
sendFastRREP=Der Knoten {0} hat schon eine Route zum Knoten {1}, und antwortet deshalb mit einem RREP.
sendRREQ=Dazu generiert er ein Route Request (RREQ), in das er seine um 1 erhöhte Sequence Number (Seq#) schreibt. Dieses RREQ wird dann per Broadcast an alle Nachbarn gesendet.
startAnimation=Animation
startFunctionality=Funktionsweise
startPageTitle=Routing
startRouteDiscovery=Der Startknoten {0} beginnt die Route Discovery, wenn er in seiner Routing Table keine Route zum Zielknoten {1} findet.
startRouteReply=Der Zielknote antwortet auf das Route Request (RREQ) mit einem Route Reply (RREP). Hierfür erhöht er seine eigene Sequence Number um eins, und schickt die Nachricht an den Next Hop auf dem Weg zum Startknoten.
statTableTitle=Statistiken
startNode=Startknoten
endNode=Zielknoten
to=Von {0} nach {1}
