algoName=Interpolationssuche
theName=Iterative Interpolationssuche (int; DE)
algoDesc=Dieser Algorithmus sucht in einem Array von int-Werten nach einem &uuml;bergebenen Wert. Wird der gesuchte Wert gefunden, so wird seine Position zur&uuml;ckgegeben, ansonsten der Wert -1.
codeExample=public int iterativeInterpolatedSearching(int[] array, int value) {\n  if (array == null || array.length == 0) {\n    return -1;\n  }\n  int nrElems = array.length();\n  int l = 0;\n  int r = nrElems - 1;\n  int mid = l + ((value - array[l]) * (r - l)) / (array[r] - array[l]);\n  while (r > l && array[mid] != value) {\n    if (value < array[mid]) {\n      r = mid - 1;\n    } else {\n      l = mid + 1;\n    }\n    mid = l + ((value - array[l]) * (r - l)) / (array[r] - array[l]);\n  }\n  if (array[mid] == value) {\n    return mid;\n  } else {\n    return -1;\n  }\n}
animTitle=Iterative Interpolationssuche (int)
algoAuthor=Dr. Guido Rößling (roessling@acm.org>
algoTitle=Iterative Interpolationssuche
animDesc=Beschreibung des Algorithmus
adForURL=Weitere Animationen finden Sie unter http://www.algoanim.info/Animal2 im Online-Repository
nrSteps=Insgesamt verwendete der Algorithmus {0} Zuweisungen und {1} Vergleiche.
description.filename=resources/JavaIterativeInterpolatedIntSearching_descr_de.txt
description.level=2
description.labelSymbol=#
code.filename=resources/JavaIterativeInterpolatedIntSearching_code.txt
code.level=2
code.labelSymbol=#
complexity.filename=resources/JavaIterativeInterpolatedIntSearching_complexity_de.txt
complexity.level=2
complexity.labelSymbol=#
nrAss=Zuweisungen
nrComp=Vergleiche
result=Ergebnis: {0}